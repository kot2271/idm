{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Identity Management System API",
        "title": "IDM API documentation",
        "contact": {}
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/employees": {
            "get": {
                "security": [
                    {
                        "OAuth2AccessCode": [
                            "read"
                        ]
                    }
                ],
                "description": "Obtain a list of all employees.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get all employees",
                "responses": {
                    "200": {
                        "description": "List of employees",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Response-any"
                            }
                        }
                    },
                    "500": {
                        "description": "Error when getting the list of employees",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2AccessCode": [
                            "write"
                        ]
                    }
                ],
                "description": "Create a new employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Create an employee",
                "parameters": [
                    {
                        "description": "create employee request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee successfully created",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    },
                    "400": {
                        "description": "Incorrect data format in request",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2AccessCode": [
                            "write"
                        ]
                    }
                ],
                "description": "Removing employees from the system by their ID list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Delete employees by ID list",
                "parameters": [
                    {
                        "description": "List of employee IDs to be deleted",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employees deleted successfully"
                    },
                    "400": {
                        "description": "Incorrect data format in the request",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    },
                    "500": {
                        "description": "Error when deleting employees",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    }
                }
            }
        },
        "/employees/ids": {
            "post": {
                "security": [
                    {
                        "OAuth2AccessCode": [
                            "read"
                        ]
                    }
                ],
                "description": "Obtaining information about employees based on their ID numbers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get employees by ID list",
                "parameters": [
                    {
                        "description": "List of employee IDs",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of employees",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    },
                    "500": {
                        "description": "Error searching for employees",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    }
                }
            }
        },
        "/employees/page": {
            "get": {
                "security": [
                    {
                        "OAuth2AccessCode": [
                            "read"
                        ]
                    }
                ],
                "description": "Obtaining a list of employees with support for page-by-page output",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get employees with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items on page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"John\"",
                        "description": "Text filter (name, email)",
                        "name": "textFilter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of employees with pagination",
                        "schema": {
                            "$ref": "#/definitions/PageResponse"
                        }
                    },
                    "400": {
                        "description": "Error when getting paginated employees",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2AccessCode": [
                            "read"
                        ]
                    }
                ],
                "description": "Accessing data about an employee using their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get employee by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee information",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    },
                    "400": {
                        "description": "Invalid employee ID",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2AccessCode": [
                            "write"
                        ]
                    }
                ],
                "description": "Removing an employee from the system by their ID",
                "tags": [
                    "employees"
                ],
                "summary": "Delete employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сотрудника",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    },
                    "400": {
                        "description": "Invalid employee ID",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    },
                    "404": {
                        "description": "Employee doesn't exists",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    },
                    "500": {
                        "description": "Error when deleting an employee",
                        "schema": {
                            "$ref": "#/definitions/Response-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateRequest": {
            "type": "object",
            "required": [
                "department",
                "email",
                "name",
                "position",
                "role_id"
            ],
            "properties": {
                "department": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "IT"
                },
                "email": {
                    "type": "string",
                    "example": "ivan.ivanov@company.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 155,
                    "minLength": 2,
                    "example": "Ivan Ivanov"
                },
                "position": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "Developer"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "PageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Response"
                    }
                },
                "pageNumber": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "Response": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Response-any": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "http://localhost:9990/realms/idm/protocol/openid-connect/auth",
            "tokenUrl": "http://localhost:9990/realms/idm/protocol/openid-connect/token",
            "scopes": {
                "read": "Read access",
                "write": "Write access"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "http://localhost:9990/realms/idm/protocol/openid-connect/token",
            "scopes": {
                "read": "Read access",
                "write": "Write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "http://localhost:9990/realms/idm/protocol/openid-connect/auth",
            "scopes": {
                "read": "Read access",
                "write": "Write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "http://localhost:9990/realms/idm/protocol/openid-connect/token",
            "scopes": {
                "read": "Read access",
                "write": "Write access"
            }
        }
    }
}