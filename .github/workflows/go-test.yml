# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Test with Keycloak

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Start Keycloak with H2
      run: |
        docker run -d \
          --name keycloak \
          -p 9990:8080 \
          -e KEYCLOAK_ADMIN=admin \
          -e KEYCLOAK_ADMIN_PASSWORD=admin \
          -e KC_HEALTH_ENABLED=true \
          -e KC_METRICS_ENABLED=false \
          -e KC_LOG_LEVEL=INFO \
          quay.io/keycloak/keycloak:26.2.2 \
          start-dev
    
    - name: Wait for Keycloak
      run: |
        echo "Waiting for Keycloak to start..."
        
        timeout 180 bash -c 'until curl -f http://localhost:9990/health/ready 2>/dev/null; do 
          echo "Waiting for Keycloak... ($(date))"
          sleep 15
        done'
        
        echo "Keycloak is ready!"
    
    - name: Setup test realm
      run: |
        echo "Getting admin token..."
        ACCESS_TOKEN=$(curl -s -X POST http://localhost:9990/realms/master/protocol/openid-connect/token \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "username=admin" \
          -d "password=admin" \
          -d "grant_type=password" \
          -d "client_id=admin-cli" | jq -r '.access_token')
        
        echo "Creating realm..."
        curl -X POST http://localhost:9990/admin/realms \
          -H "Authorization: Bearer $ACCESS_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{
            "realm": "idm",
            "enabled": true
          }'
        
        echo "Waiting for JWKS endpoint..."
        timeout 60 bash -c 'until curl -f http://localhost:9990/realms/idm/protocol/openid-connect/certs; do 
          sleep 5
        done'
        
        echo "Setup complete!"
    
    - name: Run tests
      run: go test -v ./inner/...
    
    - name: Show logs on failure
      if: failure()
      run: |
        echo "=== Keycloak Logs ==="
        docker logs keycloak
    
    - name: Cleanup
      if: always()
      run: |
        docker stop keycloak || true
        docker rm keycloak || true