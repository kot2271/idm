name: Go Test with Keycloak

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: keycloak_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Prepare Keycloak import directory
        run: |
          mkdir -p /tmp/keycloak-import
          cp docker/auth/import/realm.json /tmp/keycloak-import/

      - name: Start Keycloak with PostgreSQL
        run: |
          docker run -d \
            --name keycloak \
            -v /tmp/keycloak-import:/opt/keycloak/data/import \
            -p 8080:8080 \
            -p 9000:9000 \
            -e KC_BOOTSTRAP_ADMIN_USERNAME=admin \
            -e KC_BOOTSTRAP_ADMIN_PASSWORD=admin \
            -e KC_DB=postgres \
            -e KC_DB_URL_HOST=host.docker.internal \
            -e KC_DB_URL_PORT=5432 \
            -e KC_DB_SCHEMA=public \
            -e KC_DB_URL_DATABASE=keycloak_db \
            -e KC_DB_USERNAME=postgres \
            -e KC_DB_PASSWORD=postgres \
            -e KC_LOG_LEVEL=INFO \
            -e KC_HEALTH_ENABLED=true \
            -e KC_METRICS_ENABLED=false \
            -e KC_HOSTNAME_STRICT_HTTPS=false \
            -e KC_HTTP_ENABLED=true \
            -e KC_HOSTNAME=localhost \
            -e KC_HOSTNAME_STRICT=false \
            --add-host=host.docker.internal:host-gateway \
            quay.io/keycloak/keycloak:26.2.2 \
            start-dev --import-realm

      - name: Wait for Keycloak to be ready
        run: |
          echo "Waiting for Keycloak to start..."
          timeout 300 bash -c 'until curl -f http://localhost:8080/health/ready 2>/dev/null; do 
            echo "Waiting for Keycloak... ($(date))"
            sleep 10
          done'
          
          echo "Waiting for master realm..."
          timeout 60 bash -c 'until curl -f http://localhost:8080/realms/master 2>/dev/null; do 
            echo "Waiting for master realm... ($(date))"
            sleep 5
          done'
          
          echo "Waiting for imported realm..."
          timeout 60 bash -c 'until curl -f http://localhost:8080/realms/idm 2>/dev/null; do 
            echo "Waiting for imported realm... ($(date))"
            sleep 5
          done'
          
          echo "Keycloak is ready!"

      - name: Verify realm import
        run: |
          echo "Checking available realms..."
          curl -s http://localhost:8080/realms/master | jq -r '.realm // "master realm accessible"'
          curl -s http://localhost:8080/realms/idm | jq -r '.realm // "idm realm accessible"'
          
          echo "Checking JWKS endpoint..."
          curl -f http://localhost:8080/realms/idm/protocol/openid-connect/certs

      - name: Run tests
        run: go test -v ./inner/...

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Keycloak Logs ==="
          docker logs keycloak || true
          echo "=== Container Status ==="
          docker ps -a || true
          echo "=== Import Directory Contents ==="
          ls -la /tmp/keycloak-import/ || true

      - name: Cleanup
        if: always()
        run: |
          docker stop keycloak || true
          docker rm keycloak || true